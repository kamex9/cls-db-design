// ===========================================================
// 共通マスター
// ===========================================================
Table "tenants" {
  "id" SERIAL [pk, note: 'テナントID']
  "name" VARCHAR(255) [not null, note: 'テナント名']
  "subdomain" VARCHAR(63) [unique, not null, note: 'テナント固有のサブドメイン']
  Note: 'テナント'
}

Table "users" {
  "id" SERIAL [pk, note: 'ユーザーID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "email" VARCHAR(255) [unique, not null, note: 'ユーザーのメールアドレス']
  "encrypted_password" VARCHAR(255) [not null, note: '暗号化されたパスワード']
  "reset_password_token" VARCHAR(255) [unique, note: 'パスワードリセット用トークン']
  "reset_password_sent_at" DATETIME [note: 'パスワードリセットトークン送信日時']
  "first_name" VARCHAR(100) [note: 'ユーザーの名']
  "last_name" VARCHAR(100) [note: 'ユーザーの姓']
  "department_id" BIGINT [not null, note: '所属部署ID']
  Note: 'ユーザー'
}

Table "departments" {
  "id" SERIAL [pk, note: '部署ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "name" VARCHAR(255) [not null, note: '部署名称']
  Note: '部署'
}

Table "counterparties" {
  "id" SERIAL [pk, note: '取引先ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "company_code" VARCHAR(31) [not null, note: '企業コード']
  "official_name" VARCHAR(255) [not null, note: '企業名（正式名称）']
  "trade_name" VARCHAR(255) [note: '企業名（商号）']
  // 自社も含めるべきかは要検討
  "is_self" BOOLEAN [not null, note: '自社フラグ', default: false]
  Note: '取引先'
}

// ===========================================================
// 契約DB
// ===========================================================
Table "document_categories" {
  "id" SERIAL [pk, note: '文書分類ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "name" VARCHAR(255) [not null, note: '分類名称']
  // "ancestry" VARCHAR(31) [note: '祖先に該当する文書分類IDを半角スラッシュ区切りで階層表現する文字列']
  Note: '文書分類'
}

Table "contract_documents" {
  "id" SERIAL [pk, note: '契約書ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "project_id" BIGINT [not null, note: '案件ID']
  // projects側でも保持しているが、ここではAI解析結果としてあえて冗長に持たせる
  "counterparty_id" BIGINT [note: '取引先ID']
  "file_name" VARCHAR(255) [not null, note: 'ファイル名']
  "file_path" VARCHAR(255) [not null, note: 'サーバー上のファイルパス']
  "is_fixed" BOOLEAN [not null, note: '締結版フラグ', default: false]
  "processing_status" processing_status [not null, note: '処理ステータス', default: "before_analysis"]
  "analysis_completed_at" DATETIME [note: '解析完了日時']
  "assignee_user_id" BIGINT [note: '契約書担当ユーザーID']
  "contract_start_date" DATE [note: '契約開始日']
  "contract_end_date" DATE [note: '契約終了日']
  "contract_amount" DECIMAL(15,2) [note: '契約金額']
  "contract_fixed_date" DATETIME [note: '契約締結日']
  "deleted_at" DATETIME [note: '削除日時']
  Note: '契約書'
}

Table "contract_document_categories" {
  "id" SERIAL [pk, note: '契約書と文書分類の組み合わせID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "contract_document_id" BIGINT [not null, note: '契約書ID']
  "document_category_id" BIGINT [not null, note: '契約書分類ID']
  indexes {
    (contract_document_id, document_category_id) [unique]
  }
  Note: '契約書と文書分類の組み合わせ'
}

Table "contract_document_articles" {
  "id" SERIAL [pk, note: '条ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "contract_document_id" BIGINT [not null, note: '契約書ID']
  "number" BIGINT [not null, note: '条番号']
  "title" VARCHAR(255) [not null, note: '条タイトル']
  indexes {
    (contract_document_id, number) [unique]
  }
  Note: '契約書条項の条部'
}

ENUM "processing_status" {
  "before_analysis"
  "analyzing"
  "analysis_success"
  "analysis_failure"
}

// ===========================================================
// 案件管理
// ===========================================================
Table "projects" {
  "id" SERIAL [pk, note: '案件ID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "counterparty_id" BIGINT [not null, note: '取引先ID']
  "name" VARCHAR(255) [not null, note: '案件名称']
  "status" project_status [not null, note: '案件状況', default: "to_do"]
  "description" TEXT [note: '案件概要']
  "email" VARCHAR(255) [note: '案件のメールアドレス']
  "desired_deadline_date" DATE [note: '希望期限']
  "start_datetime" DATETIME [note: '開始日時']
  "end_datetime" DATETIME [note: '終了日時']
  Note: '案件'
}

ENUM "project_status" {
  "to_do"
  "in_progress"
  "in_review"
  "closed_as_completed"
  "closed_as_rejected"
}

Table "project_users" {
  "id" SERIAL [pk, note: '案件ユーザーID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "project_id" BIGINT [not null, note: '案件ID']
  "user_id" BIGINT [not null, note: 'ユーザーID']
  "role" project_users_role [not null, note: '役割種別']
  indexes {
    (project_id, user_id, role) [unique]
  }
  Note: '案件ユーザー'
}

ENUM "project_users_role" {
  "assignee"
  "requester"
  "participant"
}

Table "project_events" {
  "id" SERIAL [pk, note: '案件イベントID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "project_id" BIGINT [not null, note: '案件ID']
  "created_by" BIGINT [not null, note: '作成者ユーザーID']
  "type" project_events_type [not null, note: 'イベント種別']
  "comment_body" TEXT [note: 'コメント内容']
  "mail_body" TEXT [note: 'メール内容']
  "old_status" project_status [note: '案件状況（変更前）']
  "new_status" project_status [note: '案件状況（変更後）']
  Note: '案件イベント'
}

ENUM "project_events_type" {
  "open"
  "open_with_attachments"
  "upload_as_draft"
  "upload_as_fixed"
  "comment"
  "comment_with_attachments"
  "mail"
  "change_status"
}

Table "project_event_attachments" {
  "id" SERIAL [pk, note: '案件イベントID']
  "tenant_id" BIGINT [not null, note: '所属テナントID']
  "project_event_id" BIGINT [not null, note: '案件イベントID']
  "contract_document_id" BIGINT [note: 'アップロードされた契約書ID']
  indexes {
    (project_event_id, contract_document_id) [unique]
  }
  Note: '案件イベント'
}

// ===========================================================
// 外部キー参照
// ===========================================================
Ref:"tenants"."id" < "users"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "departments"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "counterparties"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "document_categories"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "contract_documents"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "contract_document_categories"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "projects"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "project_users"."tenant_id" [delete: cascade]
Ref:"tenants"."id" < "project_events"."tenant_id" [delete: cascade]
Ref:"departments"."id" < "users"."department_id" [delete: cascade]
Ref:"projects"."id" < "contract_documents"."project_id" [delete: cascade]
Ref:"projects"."id" < "project_users"."project_id" [delete: cascade]
Ref:"projects"."id" < "project_events"."project_id" [delete: cascade]
Ref:"counterparties"."id" < "contract_documents"."counterparty_id" [delete: cascade]
Ref:"counterparties"."id" < "projects"."counterparty_id" [delete: cascade]
Ref:"users"."id" < "contract_documents"."assignee_user_id" [delete: cascade]
Ref:"users"."id" < "project_users"."user_id" [delete: cascade]
Ref:"users"."id" < "project_events"."created_by" [delete: cascade]
Ref:"contract_documents"."id" < "contract_document_categories"."contract_document_id" [delete: cascade]
Ref:"contract_documents"."id" < "contract_document_articles"."contract_document_id" [delete: cascade]
Ref:"contract_documents"."id" < "project_event_attachments"."contract_document_id" [delete: cascade]
Ref:"document_categories"."id" < "contract_document_categories"."document_category_id" [delete: cascade]
Ref:"project_events"."id" < "project_event_attachments"."project_event_id" [delete: cascade]
